https://github.com/playframework/play-java-ebean-example/blob/2.6.x/app/controllers/HomeController.java
http://beanvalidation.org/1.0/spec/#constraintsdefinitionimplementation-constraintdefinition-properties
http://tutorials.jenkov.com/java/enums.html
https://www.playframework.com/documentation/2.5.x/JavaForms
https://www.playframework.com/documentation/2.5.x/ScalaForms
http://grokbase.com/t/gg/play-framework/135p42qqgg/2-1-1-validate-the-password-and-confirmation-passwords-match
https://stackoverflow.com/questions/22459220/play-framework-2-best-way-of-validating-individual-model-fields-separately

Login
https://github.com/playframework/playframework/issues/5992
https://github.com/ics-software-engineering/play-example-login

@Security.Authenticated(CCSecurityAuthenticator.class)
public class Gnjp7000Ctrl extends Controller { }

Constraints #https://github.com/playframework/playframework/blob/master/framework/src/play-java-forms/src/main/java/play/data/validation/Constraints.java
@Required
@Min(value = 1)
@Max(value = 100)
@MinLength(value = 100)
@MaxLength(value = 100)
@Email
@Pattern(value = "\\d{1,6}")
@ValidateWith()

Formats
@DateTime(pattern = "yyyy-MM-dd")
@NonEmpty

Message
https://github.com/playframework/playframework/blob/38abd1ca6d17237950c82b1483057c5c39929cb4/framework/src/play/src/main/resources/messages.default
 
https://www.playframework.com/documentation/2.5.x/ProductionConfiguration

Module
https://www.playframework.com/documentation/2.5.x/ModuleDirectory

FileUpload
https://github.com/playframework/play-java-fileupload-example
https://www.playframework.com/documentation/2.6.x/JavaFileUpload
https://gist.github.com/steren/660937
- Lưu ở một thư mục chỉ định
- Controller.action -> get Image

public static Result index(String projectId, String userId){
		System.out.println(projectId + "=" + userId);
		return ok(getFileContent("public/images/1px.jpg")).as("image/jpg");
	}
	
	public static byte[] getFileContent(String path){
		try {
			java.io.InputStream is = play.Play.application().resourceAsStream(path);
			return IOUtils.toByteArray(is);
		} catch (Exception e) {
		}
		return null;
}

